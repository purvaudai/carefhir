{"version":3,"sources":["serviceWorker.js","api/index.js","components/Info/index.js","components/PatientList/index.js","Home/index.js","components/PatientInfo/index.js","components/ObservationTable/helpers.js","components/ObservationTable/index.js","components/Encounter/helpers.js","components/Encounter/index.js","Summary/index.js","index.js"],"names":["Boolean","window","location","hostname","match","querProp","params","Object","keys","reduce","all","key","Array","isArray","length","temp","JSON","stringify","push","encodeURI","join","getPatients","serverAddress","serverHeaders","queryParams","axios","get","headers","Info","props","text","icon","shadow","style","width","height","margin","className","name","type","size","PatientList","data","onClick","entry","patients","map","item","index","ev","resource","id","appearance","given","charAt","family","birthDate","gender","getPatientCard","Home","history","useHistory","getServer","server","localStorage","getItem","getHeaders","useState","fhirServer","setServer","setHeaders","invalidHeader","setHeaderStatus","modalState","setModalState","searchQuery","setSearchQuery","searchGender","setSearchGender","setPatients","error","setError","errText","setErrText","onModalClose","modalOptions","open","onClose","backdrop","dimension","modalHeaderOptions","heading","subHeading","handleServerInput","value","useEffect","parse","then","catch","err","console","log","handleSearchInput","drillToPatientInfo","clearButton","placeholder","onChange","target","onClear","rows","e","handleHeaderInput","defaultValue","setItem","disabled","display","justifyContent","alignItems","options","label","selected","overflowY","columnOptions","sizeXL","sizeM","PatientInfo","padding","backgroundColor","maritalStatus","telecom","condition","code","coding","getIssuedDate","date","iDate","issued","d","Date","getTime","checkValidDate","getMonth","getDay","getFullYear","getValue","valQuantity","valueQuantity","val","unit","toString","split","slice","getInterpretation","interPretation","interpretation","inference","toUpperCase","schema","displayName","resizable","cellType","ObservationTable","getInterpObj","toLowerCase","includes","statusAppearance","title","filteredData","arr","forEach","cndn","interpret","componentVals","compVals","component","c","v","getComponentVals","issuedDate","comp","cdn","interp","filterData","withPagination","pageSize","showMenu","Encounter","res","rType","lType","sDate","period","start","dateStr","startDate","participant","providerRef","individual","reference","orgRef","serviceProvider","locationType","getValObj","Summary","patientId","useParams","patientData","setPatientData","observationData","setObservationData","encounterData","setEncounterData","getPatientData","getObservationData","filtered","getEncounterData","pageheaderOptions","breadcrumb","list","link","ReactDOM","render","StrictMode","basename","process","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.903e1924.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\n\nlet querProp = {\n  stringifyQueryParams(params) {\n    return Object.keys(params)\n      .reduce((all, key) => {\n        if (params[key] && params[key] !== '') {\n          if (Array.isArray(params[key])) {\n            if (params[key].length > 0) {\n              const temp = JSON.stringify(params[key]);\n              all.push(`${key}=${encodeURI(temp)}`);\n            }\n          } else {\n            all.push(`${key}=${encodeURI(params[key])}`);\n          }\n        }\n        return all;\n      }, [])\n      .join('&');\n  }\n};\n\nexport const getPatients = (serverAddress, serverHeaders = {}) => (params) => {\n  const queryParams = querProp.stringifyQueryParams(params);\n  return axios.get(`${serverAddress}/Patient?${queryParams}`, {\n    headers: serverHeaders\n  });\n};\n\nexport const getPatientData = (serverAddress, serverHeaders = {}) => (id) => {\n  return axios.get(`${serverAddress}/Patient/${id}`, {\n    headers: serverHeaders\n  });\n};\n\nexport const getObservationData = (serverAddress, serverHeaders = {}) => (id) => {\n  return axios.get(`${serverAddress}/Observation?subject=Patient/${id}`, {\n    headers: serverHeaders\n  });\n};\n\nexport const getEncounterData = (serverAddress, serverHeaders = {}) => (id) => {\n  return axios.get(`${serverAddress}/Encounter?subject=Patient/${id}`, {\n    headers: serverHeaders\n  });\n};\n","import React from 'react';\nimport { Icon, Heading, Card, Row, Column } from '@innovaccer/design-system';\nimport './Info.css';\n\nconst Info = (props) => {\n  const { text, icon } = props;\n\n  return (\n    <Card shadow=\"dark\" style={{ width: '400px', height: '80px', margin: 'auto' }}>\n      <div className=\"Info-wrapper\">\n        <div className=\"Info-wrapper-icon\">\n          <Icon name={icon} type=\"filled\" />\n        </div>\n        <div className=\"Info-wrapper-heading\">\n          <Heading size=\"l\">{text}</Heading>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default Info;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Avatar, Heading, Badge, Subheading } from '@innovaccer/design-system';\nimport './PatientList.css';\nimport Info from '../Info';\n\nconst PatientList = (props) => {\n  const { data = {}, onClick } = props;\n\n  const getPatientCard = (patients = []) => {\n    return patients.map((item, index) => {\n      return (\n        <div className=\"PatientList-itemWrapper\" key={index} onClick={(ev) => onClick(ev, item.resource.id)}>\n          <div className=\"PatientList-item-heading\">\n            <Avatar appearance=\"primary\">\n              {`${item.resource.name[0].given[0].charAt(0)}${item.resource.name[0].family.charAt(0)}`}\n            </Avatar>\n            <Heading size=\"m\">{`${item.resource.name[0].given[0]}, ${item.resource.name[0].family}`}</Heading>\n            <Badge appearance=\"secondary\">{item.resource.id}</Badge>\n          </div>\n          <div className=\"PatientList-item-info\">\n            <Subheading appearance=\"default\">DOB: </Subheading>\n            <Subheading appearance=\"subtle\">{item.resource.birthDate}</Subheading>\n            <Subheading appearance=\"default\">Gender: </Subheading>\n            <Subheading appearance=\"subtle\">{item.resource.gender}</Subheading>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className=\"PatientList\">\n      {data.entry && data.entry.length === 0 ? <Info text=\"No data found\" icon=\"error\" /> : getPatientCard(data.entry)}\n    </div>\n  );\n};\n\nexport default PatientList;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Input,\n  Button,\n  Heading,\n  Textarea,\n  Label,\n  Dropdown\n} from '@innovaccer/design-system';\nimport { useHistory } from 'react-router-dom';\nimport './Home.css';\nimport { getPatients } from '../api';\nimport PatientList from '../components/PatientList';\nimport Info from '../components/Info';\n\nconst Home = () => {\n  let history = useHistory();\n  const getServer = () => {\n    const server = localStorage.getItem('fhirServer');\n    return server ? server : '';\n  };\n\n  const getHeaders = () => {\n    const data = localStorage.getItem('serverHeaders');\n    return data ? data : '{}';\n  };\n\n  const [fhirServer, setServer] = useState(getServer());\n  const [serverHeaders, setHeaders] = useState(getHeaders());\n  const [invalidHeader, setHeaderStatus] = useState(false);\n  const [modalState, setModalState] = useState(getServer() ? false : true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchGender, setSearchGender] = useState('');\n  const [patients, setPatients] = useState([]);\n  const [error, setError] = useState(false);\n  const [errText, setErrText] = useState('');\n\n  const onModalClose = () => {\n    if (getServer()) {\n      setModalState(false);\n      setServer(getServer());\n    } else {\n      return null;\n    }\n  };\n\n  const modalOptions = {\n    open: modalState,\n    onClose: onModalClose,\n    backdrop: false,\n    dimension: 'small'\n  };\n\n  const modalHeaderOptions = {\n    onClose: onModalClose,\n    icon: 'pan_tool',\n    heading: 'FHIR Server',\n    subHeading: 'FHIR Server address'\n  };\n\n  const handleServerInput = (value) => {\n    setServer(value);\n  };\n\n  const handleHeaderInput = (value) => {\n    let temp;\n    try {\n      temp = JSON.parse(value);\n      setHeaderStatus(false);\n      setHeaders(value);\n    } catch (e) {\n      setHeaderStatus(true);\n      setHeaders(value);\n    }\n  };\n\n  const updateServer = () => {\n    localStorage.setItem('fhirServer', fhirServer);\n    localStorage.setItem('serverHeaders', serverHeaders);\n    setModalState(false);\n    setPatients([]);\n  };\n\n  useEffect(() => {\n    setServer(getServer());\n    setHeaders(getHeaders());\n    if (getServer()) {\n      getPatients(\n        fhirServer,\n        JSON.parse(serverHeaders)\n      )({ name: searchQuery, gender: searchGender })\n        .then((data) => {\n          setPatients(data.data);\n        })\n        .catch((err) => {\n          console.log(err);\n          setError(true);\n          setErrText('Something went wrong');\n        });\n    }\n  }, [localStorage.getItem('fhirServer'), modalState]);\n\n  const handleSearchInput = (value) => {\n    setSearchQuery(value);\n  };\n\n  const handleGenderInput = (selected, name) => {\n    setSearchGender(selected);\n  };\n\n  const handleSearch = () => {\n    getPatients(\n      fhirServer,\n      JSON.parse(serverHeaders)\n    )({ name: searchQuery, gender: searchGender })\n      .then((data) => {\n        setPatients(data.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setError(true);\n        setErrText('Something went wrong');\n      });\n  };\n\n  const drillToPatientInfo = (ev, id) => {\n    history.push(`/patients/${id}`);\n  };\n\n  const genderOptions = [\n    { label: 'Male', value: 'male' },\n    { label: 'Female', value: 'female' }\n  ];\n\n  const renderPatientList = () => {\n    if (error) {\n      return <Info text={errText} icon=\"error\" />;\n    } else {\n      if (patients && patients.entry && patients.entry.length > 0) {\n        return (\n          <div style={{ height: 'calc(100vh - 112px', overflowY: 'scroll' }}>\n            <PatientList data={patients} onClick={drillToPatientInfo} />\n          </div>\n        );\n      }\n    }\n  };\n\n  return (\n    <div className=\"Home\">\n      <Modal {...modalOptions}>\n        <ModalHeader {...modalHeaderOptions} />\n        <ModalBody>\n          <Label style={{ margin: '0px 0 4px' }}>Address</Label>\n          <Input\n            clearButton={true}\n            value={fhirServer}\n            name=\"input\"\n            placeholder=\"Search\"\n            onChange={(ev) => handleServerInput(ev.target.value)}\n            onClear={() => handleServerInput('')}\n          />\n          <Label style={{ margin: '8px 0 4px' }}>Headers</Label>\n          <Textarea\n            name=\"Textarea\"\n            placeholder=\"Headers\"\n            rows={5}\n            onChange={(ev) => handleHeaderInput(ev.target.value)}\n            defaultValue={serverHeaders}\n            error={invalidHeader}\n          />\n        </ModalBody>\n        <ModalFooter>\n          <Button appearance=\"primary\" onClick={() => updateServer()} disabled={!fhirServer || invalidHeader}>\n            Submit\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <div className=\"PageHeader-wrapper\">\n        <div className=\"PageHeader\">\n          <Heading size=\"m\">Patients</Heading>\n          <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n            <Button appearance=\"primary\" onClick={() => setModalState(true)}>\n              Change Server\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className=\"Search-wrapper\">\n        <Input\n          clearButton={true}\n          value={searchQuery}\n          icon=\"search\"\n          name=\"input\"\n          placeholder=\"Search\"\n          onChange={(ev) => handleSearchInput(ev.target.value)}\n          onClear={() => handleSearchInput('')}\n        />\n        <div style={{ width: '150px' }}>\n          <Dropdown options={genderOptions} placeholder={'Gender'} onChange={handleGenderInput} />\n        </div>\n        <Button appearance=\"primary\" onClick={() => handleSearch()}>\n          Search\n        </Button>\n      </div>\n      {renderPatientList()}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Avatar, Heading, Badge, Card, Row, Column, Subheading } from '@innovaccer/design-system';\nimport './PatientInfo.css';\n\nconst columnOptions = {\n  size: '6',\n  sizeXL: '6',\n  sizeM: '6'\n};\n\nconst PatientInfo = (props) => {\n  const { data = {} } = props;\n\n  return (\n    <Card\n      shadow=\"dark\"\n      style={{\n        width: '600px',\n        padding: '16px',\n        backgroundColor: 'white'\n      }}\n    >\n      <div className=\"PatientInfo-heading\">\n        <Avatar appearance=\"primary\">{`${data.name[0].given[0].charAt(0)}${data.name[0].family.charAt(0)}`}</Avatar>\n        <Heading size=\"m\">{`${data.name[0].given[0]}, ${data.name[0].family}`}</Heading>\n        <Badge appearance=\"secondary\">{data.id}</Badge>\n      </div>\n      <div className=\"PatientInfo-body\">\n        <Row>\n          <Column {...columnOptions}>\n            <div className=\"PatientInfo-item\">\n              <Subheading appearance=\"default\">DOB: </Subheading>\n              <Subheading appearance=\"subtle\">{data.birthDate}</Subheading>\n            </div>\n          </Column>\n          <Column {...columnOptions}>\n            <div className=\"PatientInfo-item\">\n              <Subheading appearance=\"default\">Gender: </Subheading>\n              <Subheading appearance=\"subtle\">{data.gender}</Subheading>\n            </div>\n          </Column>\n        </Row>\n        <Row>\n          <Column {...columnOptions}>\n            <div className=\"PatientInfo-item\">\n              <Subheading appearance=\"default\">Marital Status: </Subheading>\n              <Subheading appearance=\"subtle\">{data.maritalStatus ? data.maritalStatus.text : 'N/A'}</Subheading>\n            </div>\n          </Column>\n          <Column {...columnOptions}>\n            <div className=\"PatientInfo-item\">\n              <Subheading appearance=\"default\">Contact: </Subheading>\n              <Subheading appearance=\"subtle\">{data.telecom ? data.telecom[0].value : 'N/A'}</Subheading>\n            </div>\n          </Column>\n        </Row>\n      </div>\n    </Card>\n  );\n};\n\nexport default PatientInfo;\n","// medical condition\nexport const condition = (resource) => {\n  const code = resource.code;\n  const coding = code ? code.coding : 'N/A';\n  const display = Array.isArray(coding) && coding.length > 0 ? coding[0].display : 'N/A';\n  return display ? display : 'N/A';\n};\n\n// helpers of effective date, issued date functions\nconst checkValidDate = (date) => {\n  const d = new Date(date);\n  return d.getTime() === d.getTime();\n};\n\nconst returnDate = (date) => {\n  return `${date.getMonth() + 1}-${date.getDay()}-${date.getFullYear()}`;\n};\n\n// issued date\nexport const getIssuedDate = (resource) => {\n  let iDate = resource.issued;\n  if (checkValidDate(iDate)) {\n    iDate = new Date(iDate);\n    return returnDate(iDate);\n  }\n  return 'N/A';\n};\n\n// the numerical value of the result obtained\nexport const getValue = (resource) => {\n  const valQuantity = resource.valueQuantity;\n  let val = valQuantity && valQuantity.value ? valQuantity.value : '';\n  const unit = valQuantity && valQuantity.unit ? valQuantity.unit : '';\n  val = val.toString();\n  const temp = val.split('.');\n  val = val.length > 4 && temp.length > 0 ? `${temp[0]}.${temp[1].slice(0, 2)}` : val;\n  return val && unit ? `${val}  ${unit}` : 'N/A';\n};\n\n// the interpretation of the result obtained\nexport const getInterpretation = (resource) => {\n  const interPretation = resource.interpretation;\n  if (interPretation) {\n    if (interPretation.length > 0) {\n      const coding = interPretation[0].coding;\n      if (coding) {\n        let inference = coding.length > 0 ? coding[0].display : '';\n        inference = inference[0].toUpperCase() + inference.slice(1);\n        return inference;\n      }\n      return '';\n    }\n    return '';\n  }\n  return '';\n};\n\n// incase if component present in resource\nexport const getComponentVals = (resource) => {\n  const compVals = [];\n\n  if (resource.component && resource.component.length > 0) {\n    resource.component.forEach((c) => {\n      const v = getValue(c);\n      const cn = condition(c);\n      const i = getInterpretation(c);\n      const val = [cn, v, i];\n      compVals.push(val);\n    });\n  }\n  return compVals;\n};\n\n// get loinc codes\n// export const getLoinc = (resource: any) => {\n//   const code = resource.code;\n//   let coding = code ? code.coding : 'N/A';\n//   coding = coding.length > 0 ? coding : 'N/A';\n//   let lionc = 'N/A';\n//   if (Array.isArray(coding)) {\n//     coding.filter(c => {\n//       return c.system && c.system.includes('loinc');\n//     });\n//   }\n//   return (lionc = coding[0].code ? coding[0].code : 'N/A');\n// };\n\nexport const schema = [\n  {\n    name: 'condition',\n    displayName: 'Condition',\n    width: 150,\n    resizable: true\n  },\n  {\n    name: 'value',\n    displayName: 'Value',\n    width: 150,\n    resizable: true\n  },\n  {\n    cellType: 'STATUS_HINT',\n    name: 'interpretation',\n    displayName: 'Interpretation',\n    width: 150,\n    resizable: true\n  },\n  {\n    name: 'issued',\n    displayName: 'Issued Date',\n    width: 150,\n    resizable: true\n  }\n];\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Table } from '@innovaccer/design-system';\nimport { condition, getIssuedDate, getValue, getInterpretation, getComponentVals, schema } from './helpers';\nimport Info from '../Info';\n\nconst ObservationTable = (props) => {\n  const { data = [] } = props;\n\n  const getInterpObj = (interpretation) => {\n    if (interpretation.toLowerCase().includes('normal') && interpretation.length > 0) {\n      return { statusAppearance: 'success', title: interpretation };\n    }\n    if (interpretation.length === 0) {\n      return { statusAppearance: 'default', title: '-' };\n    }\n    return { statusAppearance: 'alert', title: interpretation };\n  };\n\n  const filterData = (arr) => {\n    const filteredData = [];\n    arr.forEach((e) => {\n      const cndn = condition(e);\n      const val = getValue(e);\n      const interpret = getInterpretation(e);\n      const componentVals = getComponentVals(e);\n      const issuedDate = getIssuedDate(e);\n\n      if (componentVals.length > 0) {\n        componentVals.forEach((comp) => {\n          const [cdn, value, interp] = comp;\n          if (value !== 'N/A') {\n            filteredData.push({\n              value,\n              condition: cdn,\n              interpretation: getInterpObj(interp),\n              issued: issuedDate\n            });\n          }\n        });\n      } else if (val !== 'N/A') {\n        filteredData.push({\n          condition: cndn,\n          value: val,\n          interpretation: getInterpObj(interpret),\n          issued: issuedDate\n        });\n      }\n    });\n    return filteredData;\n  };\n\n  const filteredData = filterData(data);\n  // const filteredData = [];\n\n  return filteredData.length === 0 ? (\n    <Info text=\"No data found\" icon=\"error\" />\n  ) : (\n    <Table data={filteredData} schema={schema} withPagination pageSize=\"9\" showMenu />\n  );\n};\n\nexport default ObservationTable;\n","export const schema = [\n  {\n    name: 'orgRef',\n    displayName: 'Facility Name',\n    width: 150,\n    resizable: true\n  },\n  {\n    name: 'locationType',\n    displayName: 'Location Type',\n    width: 150,\n    resizable: true\n  },\n  {\n    name: 'providerRef',\n    displayName: 'Provider',\n    width: 150,\n    resizable: true\n  },\n  {\n    name: 'startDate',\n    displayName: 'Start Date',\n    width: 150,\n    resizable: true\n  }\n];\n","import axios from 'axios';\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { schema } from './helpers';\nimport { Table } from '@innovaccer/design-system';\nimport Info from '../Info';\n\nconst Encounter = (props) => {\n  const { data = [] } = props;\n\n  // const serverAddress = 'https://r4.smarthealthit.org';\n\n  // const getReferences = async (serverAddress, serverHeaders = {}, link) => {\n  //   const ref = await axios.get(`${serverAddress}/${link}`, {\n  //     headers: serverHeaders\n  //   });\n\n  //   return ref;\n  // };\n\n  // const getRefValues = async (resource) => {\n  //   // const rType = resource.type && resource.type.length > 0 ? resource.type[0] : '-';\n  //   // const lType = rType && rType.text ? rType.text : '-';\n  //   // const startDate = resource.period ? resource.period.start : '-';\n  //   const participant = resource.participant && resource.participant.length > 0 ? resource.participant[0] : '-';\n  //   const providerRef = participant && participant.individual ? participant.individual.reference : '';\n  //   const orgRef = resource.serviceProvider ? resource.serviceProvider.reference : '';\n  //   let provider = '';\n  //   let facility = '';\n\n  //   if (providerRef !== '-') {\n  //     const pRef = await getReferences(serverAddress, {}, providerRef);\n  //     provider = pRef;\n  //   }\n\n  //   if (orgRef !== '-') {\n  //     const fRef = await getReferences(serverAddress, {}, orgRef);\n  //     facility = fRef;\n  //   }\n  //   // const facility = (await orgRef) !== '' ? getReferences(serverAddress, {}, orgRef) : '-';\n\n  //   const provName = provider === '-' ? '-' : `${provider.data.name[0].given[0]}, ${provider.data.name[0].family}`;\n  //   const orgName = facility === '-' ? '-' : facility.data.name;\n  //   const orgContact = facility === '-' ? '-' : facility.data.telecom;\n  //   const orgSys = Array.isArray(orgContact) ? orgContact[0].system : '-';\n  //   const orgTel = orgSys === 'phone' ? orgContact[0].value : '-';\n\n  //   // console.table([provName, orgName, orgTel]);\n  //   return [provName, orgName, orgTel];\n  // };\n\n  const getValObj = (resource) => {\n    const rType = resource.type && resource.type.length > 0 ? resource.type[0] : '-';\n    const lType = rType && rType.text ? rType.text : '-';\n    const sDate = resource.period ? resource.period.start : '-';\n    const dateStr = sDate === '-' ? '-' : new Date(sDate);\n    const startDate = dateStr === '-' ? '-' : `${dateStr.getMonth() + 1}-${dateStr.getDay()}-${dateStr.getFullYear()}`;\n    const participant = resource.participant && resource.participant.length > 0 ? resource.participant[0] : '-';\n    let providerRef = participant && participant.individual ? participant.individual.reference : '';\n    let orgRef = resource.serviceProvider ? resource.serviceProvider.reference : '';\n\n    providerRef = providerRef === '' ? '-' : providerRef.split('/')[1];\n    orgRef = orgRef === '' ? '-' : orgRef.split('/')[1];\n\n    // const [provider, facility, facilityTel] = await getRefValues(resource);\n\n    return {\n      startDate,\n      providerRef,\n      orgRef,\n      locationType: lType\n    };\n  };\n\n  // console.log('data', data);\n  const filteredData = data.map((res) => getValObj(res));\n\n  return filteredData.length === 0 ? (\n    <Info text=\"No data found\" icon=\"error\" />\n  ) : (\n    <Table data={filteredData} schema={schema} withPagination pageSize=\"9\" showMenu />\n  );\n};\n\nexport default Encounter;\n","import React, { useState, useEffect } from 'react';\nimport { PageHeader, Breadcrumbs, Card, Subheading } from '@innovaccer/design-system';\nimport { useHistory, useParams } from 'react-router-dom';\nimport './Summary.css';\nimport { getPatientData, getObservationData, getEncounterData } from '../api';\nimport PatientInfo from '../components/PatientInfo';\nimport ObservationTable from '../components/ObservationTable';\nimport Encounter from '../components/Encounter';\nimport Info from '../components/Info';\n\nconst Summary = () => {\n  let history = useHistory();\n  const params = useParams();\n  const patientId = params.id;\n  const getServer = () => {\n    const server = localStorage.getItem('fhirServer');\n    return server ? server : '';\n  };\n\n  const getHeaders = () => {\n    const data = localStorage.getItem('serverHeaders');\n    return data ? data : '{}';\n  };\n\n  const [fhirServer, setServer] = useState(getServer());\n  const [serverHeaders, setHeaders] = useState(getHeaders());\n  const [patientData, setPatientData] = useState(null);\n  const [observationData, setObservationData] = useState(null);\n  const [encounterData, setEncounterData] = useState(null);\n  const [error, setError] = useState(false);\n\n  console.log(patientId);\n  useEffect(() => {\n    setServer(getServer());\n    setHeaders(getHeaders());\n    if (getServer()) {\n      getPatientData(\n        fhirServer,\n        JSON.parse(serverHeaders)\n      )(patientId)\n        .then((data) => {\n          setPatientData(data.data);\n        })\n        .catch((err) => {\n          console.log(err);\n          setError(true);\n        });\n\n      getObservationData(\n        fhirServer,\n        JSON.parse(serverHeaders)\n      )(patientId)\n        .then((data) => {\n          const filtered = data.data && data.data.entry ? data.data.entry.map((e) => e.resource) : [];\n          setObservationData(filtered);\n        })\n        .catch((err) => {\n          console.log(err);\n          setError(true);\n        });\n\n      getEncounterData(\n        fhirServer,\n        JSON.parse(serverHeaders)\n      )(patientId)\n        .then((data) => {\n          const filtered = data.data && data.data.entry ? data.data.entry.map((e) => e.resource) : [];\n          setEncounterData(filtered);\n        })\n        .catch((err) => {\n          console.log(err);\n          setError(true);\n        });\n    } else {\n      history.push('/');\n    }\n  }, [localStorage.getItem('fhirServer')]);\n\n  const breadcrumbData = [\n    {\n      label: 'Home',\n      link: '/'\n    }\n  ];\n\n  const pageheaderOptions = {\n    title: `Patient Summary`,\n    breadcrumb: <Breadcrumbs list={breadcrumbData} onClick={(link) => history.push(link)} />\n  };\n\n  return error ? (\n    <Info text=\"Something went wrong\" icon=\"error\" />\n  ) : (\n    <div className=\"Summary\">\n      <PageHeader {...pageheaderOptions} />\n      <div className=\"Summary-body\">\n        {patientData && <PatientInfo data={patientData} />}\n        {observationData && (\n          <div className=\"Summary-table\">\n            <Subheading>Observations</Subheading>\n            <ObservationTable data={observationData} />\n          </div>\n        )}\n        {encounterData && (\n          <div className=\"Summary-table\">\n            <Subheading>Encounters</Subheading>\n            <Encounter data={encounterData} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Summary;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Summary from './Summary';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/patients/:id\" exact>\n          <Summary />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}